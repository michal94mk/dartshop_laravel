{
    "openapi": "3.0.0",
    "info": {
        "title": "DartShop API Documentation",
        "description": "Comprehensive API documentation for DartShop Laravel e-commerce platform. This API provides endpoints for managing products, orders, users, shopping cart, payments, and administrative functions for a dart equipment store.",
        "contact": {
            "name": "DartShop API Support",
            "url": "https://dartshop.com/support",
            "email": "admin@dartshop.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "DartShop API Server - Development Environment"
        },
        {
            "url": "https://api.dartshop.com",
            "description": "DartShop API Server - Production Environment"
        }
    ],
    "paths": {
        "/api/admin/dashboard": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get admin dashboard data",
                "description": "Retrieve dashboard statistics and metrics for admin panel",
                "operationId": "8319442f857b6ed13088f1c21f22bf99",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "stats": {
                                            "properties": {
                                                "product_count": {
                                                    "type": "integer",
                                                    "example": 127
                                                },
                                                "user_count": {
                                                    "type": "integer",
                                                    "example": 1250
                                                },
                                                "order_count": {
                                                    "type": "integer",
                                                    "example": 856
                                                },
                                                "review_count": {
                                                    "type": "integer",
                                                    "example": 324
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "recent_orders": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "sales_data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-01-15"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1250
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "top_products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/products": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get products (admin)",
                "description": "Retrieve paginated list of all products for admin management",
                "operationId": "ee78ed432dcd0d3bbd67a30f2ed4f8f9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "dart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create product (admin)",
                "description": "Create a new product",
                "operationId": "8440db3239a781e7f453482e2e64ff41",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Professional Dart Set"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High-quality professional dart set"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 89.99
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "https://example.com/image.jpg",
                                        "nullable": true
                                    },
                                    "is_featured": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/products/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get product (admin)",
                "description": "Get detailed product information for admin",
                "operationId": "fb9c49c1e5c7933b13e6f60c391cf690",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update product (admin)",
                "description": "Update an existing product",
                "operationId": "84d52acc72f05c41ea075dacfe777f4b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Product Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete product (admin)",
                "description": "Delete a product",
                "operationId": "52caf42ddb4d113cc4716d7aa1241dba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get users (admin)",
                "description": "Retrieve paginated list of all users for admin management",
                "operationId": "07f72d028204016021396fd997893b3f",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or email",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "john"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/orders": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get orders (admin)",
                "description": "Retrieve paginated list of all orders for admin management",
                "operationId": "22057c0d6a52d1abac2f037c27ef1cca",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by order status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "shipped",
                                "delivered",
                                "cancelled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/orders/{order}/status": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update order status (admin)",
                "description": "Update the status of an order",
                "operationId": "42405541d86c2a37e6fdba9630968c5e",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "shipped",
                                            "delivered",
                                            "cancelled"
                                        ],
                                        "example": "processing"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/categories": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get categories (admin)",
                "description": "Retrieve all categories for admin management",
                "operationId": "dbbcebb1818eb217ff4d4c590a2f4ef8",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create category (admin)",
                "description": "Create a new product category",
                "operationId": "ba592e7ec5c82c9137706426a12c2737",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dart Accessories"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "dart-accessories"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Various dart accessories and equipment"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user with email and password, returns access token",
                "operationId": "cf2becb0de63a03abc07368f266e5fb8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Register a new user account",
                "operationId": "592e3f52d1b79e589b49d53533114533",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "privacy_policy_accepted": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "newsletter_consent": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout user and invalidate all tokens",
                "operationId": "601ad32636d91700c35d75f71cae94ec",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Get current authenticated user information",
                "operationId": "21c173a953862c9234cba163aef2d913",
                "responses": {
                    "200": {
                        "description": "User information retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset",
                "description": "Send password reset email to user",
                "operationId": "308349e605e2e7115263d906c01e73a5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset email sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password with reset token",
                "operationId": "637f12d06db5b1d65576803dcbd98777",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "abc123..."
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google/redirect": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Google OAuth redirect",
                "description": "Redirect to Google OAuth provider",
                "operationId": "b77173e94375161d1627b24983b95db7",
                "responses": {
                    "302": {
                        "description": "Redirect to Google OAuth"
                    }
                }
            }
        },
        "/api/email/verification-notification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email verification",
                "description": "Resend email verification notification",
                "operationId": "3aa99d945beba2f49bd3a35e9fb90187",
                "responses": {
                    "200": {
                        "description": "Email verification sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verification sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/my-orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get user orders",
                "description": "Retrieve all orders for the authenticated user",
                "operationId": "37557e33afeb4f9441c0ce276a622120",
                "responses": {
                    "200": {
                        "description": "User orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/my-orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get specific user order",
                "description": "Retrieve details of a specific order for the authenticated user",
                "operationId": "48fa9d9cecd1d0b0a91586fe892baf80",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderDetailed"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/checkout": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create order (checkout)",
                "description": "Create a new order from cart items for authenticated user",
                "operationId": "df9ed49a232651d19a4c86dd4239ce75",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "shipping_address": {
                                        "properties": {
                                            "first_name": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "company": {
                                                "type": "string",
                                                "example": "Acme Corp",
                                                "nullable": true
                                            },
                                            "address_line_1": {
                                                "type": "string",
                                                "example": "123 Main St"
                                            },
                                            "address_line_2": {
                                                "type": "string",
                                                "example": "Apt 4B",
                                                "nullable": true
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "New York"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "NY"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "10001"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "US"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+1234567890",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "example": "standard"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Please handle with care",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderDetailed"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Empty cart or other validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/guest-checkout": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Guest checkout",
                "description": "Create an order for guest users (without authentication)",
                "operationId": "4473c0bbfc72290c528e8645a1ec520b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "guest@example.com"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "shipping_address": {
                                        "properties": {
                                            "first_name": {
                                                "type": "string",
                                                "example": "Jane"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "Smith"
                                            },
                                            "address_line_1": {
                                                "type": "string",
                                                "example": "456 Oak Ave"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Los Angeles"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "CA"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "90210"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "US"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "example": "express"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Guest order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderDetailed"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{order}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details (public)",
                "description": "Retrieve order details for success/confirmation page",
                "operationId": "8b0b3b06676f1fa587c207325d5a928f",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderDetailed"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/shipping-methods": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get shipping methods",
                "description": "Retrieve available shipping methods with costs",
                "operationId": "f03474efa8b39a4154325b292cc5f2bf",
                "parameters": [
                    {
                        "name": "cart_total",
                        "in": "query",
                        "description": "Cart total amount for shipping calculation",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 89.99
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shipping methods retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "methods": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "standard"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Standard Shipping"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "5-7 business days"
                                                    },
                                                    "cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 9.99
                                                    },
                                                    "estimated_days": {
                                                        "type": "integer",
                                                        "example": 7
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "free_shipping_threshold": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stripe/create-checkout-session": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Create Stripe checkout session",
                "description": "Create a Stripe checkout session for payment processing",
                "operationId": "f0fff9934182950a3701219680a363e6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "success_url": {
                                        "type": "string",
                                        "example": "https://example.com/success"
                                    },
                                    "cancel_url": {
                                        "type": "string",
                                        "example": "https://example.com/cancel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout session created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "checkout_url": {
                                            "type": "string",
                                            "example": "https://checkout.stripe.com/pay/..."
                                        },
                                        "session_id": {
                                            "type": "string",
                                            "example": "cs_123456789"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stripe/webhook": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Stripe webhook handler",
                "description": "Handle Stripe webhook events for payment processing",
                "operationId": "4878aa482d4e973b200c0fa876664d68",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "checkout.session.completed"
                                    },
                                    "data": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "received": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid webhook data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products list",
                "description": "Retrieve a paginated list of products with filtering and search options",
                "operationId": "47f2131384a82b897cef4c020d424b73",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for product name or description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "dart"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Filter by brand ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 10
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 100
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "price",
                                "created_at"
                            ],
                            "example": "name"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 58
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details",
                "description": "Retrieve detailed information about a specific product",
                "operationId": "edf8d355f4d505d996c9560930fdb70d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDetailed"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/latest": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get latest products",
                "description": "Retrieve the latest added products",
                "operationId": "2d6a9f5d97c44d65a9781a0860dceb38",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of products to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 6
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{productId}/reviews": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product reviews",
                "description": "Retrieve reviews for a specific product",
                "operationId": "be047bde1e7e00990816698d19461299",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create product review",
                "description": "Create a new review for a product (authenticated users only)",
                "operationId": "baf38b74c69b6d0f6e15e6cb795f2511",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Great product, excellent quality!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot review this product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{productId}/can-review": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Check if user can review product",
                "description": "Check if the authenticated user can review the product",
                "operationId": "5e8fad348225710dbde49adef3c02ab0",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review eligibility check",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "can_review": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "reason": {
                                            "type": "string",
                                            "example": "User has purchased this product",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get cart contents",
                "description": "Retrieve all items in the user's shopping cart",
                "operationId": "47cf5e0441eac0bd762c986b56527f79",
                "responses": {
                    "200": {
                        "description": "Cart contents retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CartItem"
                                            }
                                        },
                                        "subtotal": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 89.99
                                        },
                                        "total_quantity": {
                                            "type": "integer",
                                            "example": 3
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add item to cart",
                "description": "Add a product to the shopping cart",
                "operationId": "ef78332c6c1f9b84a2437219cd0eff90",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CartItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear cart",
                "description": "Remove all items from the shopping cart",
                "operationId": "2a4a4bf73f36160948b3424d572ef11c",
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart cleared successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/{cartItem}": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update cart item",
                "description": "Update quantity of an item in the cart",
                "operationId": "e7267c5f91a54dbd4b9b10fd0ce13482",
                "parameters": [
                    {
                        "name": "cartItem",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CartItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove item from cart",
                "description": "Remove a specific item from the shopping cart",
                "operationId": "668226315abd2c41863b431a4f72102d",
                "parameters": [
                    {
                        "name": "cartItem",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item removed from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item removed from cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories list",
                "description": "Retrieve all product categories",
                "operationId": "bdf9565d07164ee61fd9cf3b558c01f1",
                "parameters": [
                    {
                        "name": "with_products_only",
                        "in": "query",
                        "description": "Include only categories that have products",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category details",
                "description": "Retrieve detailed information about a specific category",
                "operationId": "fb384aa43900f11db1fc7cff1d868807",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}/products": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category products",
                "description": "Retrieve all products in a specific category",
                "operationId": "e2e5217d5a2f6463eb83bec5084d5c3f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 35
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/statistics": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category statistics",
                "description": "Retrieve statistics about categories and their products",
                "operationId": "e8dccc16c04d223d1c17fb5893868204",
                "responses": {
                    "200": {
                        "description": "Category statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_categories": {
                                            "type": "integer",
                                            "example": 8
                                        },
                                        "categories_with_products": {
                                            "type": "integer",
                                            "example": 6
                                        },
                                        "total_products": {
                                            "type": "integer",
                                            "example": 127
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Harrows Supergrip Ultra"
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional dart flights for tournament play"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 29.99
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "nullable": true
                    },
                    "is_featured": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductDetailed": {
                "title": "Product Detailed",
                "description": "Detailed product model with relationships",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Product"
                    },
                    {
                        "properties": {
                            "category": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                ],
                                "nullable": true
                            },
                            "brand": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                ],
                                "nullable": true
                            },
                            "promotion_price": {
                                "type": "number",
                                "format": "float",
                                "example": 24.99,
                                "nullable": true
                            },
                            "savings": {
                                "type": "number",
                                "format": "float",
                                "example": 5,
                                "nullable": true
                            },
                            "promotion": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Summer Sale"
                                    },
                                    "badge_text": {
                                        "type": "string",
                                        "example": "20% OFF"
                                    },
                                    "badge_color": {
                                        "type": "string",
                                        "example": "red"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "reviews_avg_rating": {
                                "type": "number",
                                "format": "float",
                                "example": 4.5,
                                "nullable": true
                            },
                            "reviews_count": {
                                "type": "integer",
                                "example": 12
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "customer"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Product category model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Dart Flights"
                    },
                    "slug": {
                        "type": "string",
                        "example": "dart-flights"
                    },
                    "description": {
                        "type": "string",
                        "example": "High-quality dart flights",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "products_count": {
                        "type": "integer",
                        "example": 15
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Brand": {
                "title": "Brand",
                "description": "Product brand model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Harrows"
                    },
                    "slug": {
                        "type": "string",
                        "example": "harrows"
                    },
                    "description": {
                        "type": "string",
                        "example": "Premium dart equipment manufacturer",
                        "nullable": true
                    },
                    "logo_url": {
                        "type": "string",
                        "example": "https://example.com/logo.jpg",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CartItem": {
                "title": "Cart Item",
                "description": "Shopping cart item model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "customer@example.com"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 159.98
                    },
                    "shipping_cost": {
                        "type": "number",
                        "format": "float",
                        "example": 9.99
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "float",
                        "example": 149.99
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "cancelled"
                        ],
                        "example": "pending"
                    },
                    "payment_status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "paid",
                            "failed",
                            "refunded"
                        ],
                        "example": "pending"
                    },
                    "shipping_method": {
                        "type": "string",
                        "example": "standard"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Handle with care",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "OrderDetailed": {
                "title": "Order Detailed",
                "description": "Detailed order model with relationships",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Order"
                    },
                    {
                        "properties": {
                            "user": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/User"
                                    }
                                ],
                                "nullable": true
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "shipping_address": {
                                "$ref": "#/components/schemas/ShippingAddress"
                            },
                            "payment": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                ],
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "OrderItem": {
                "title": "Order Item",
                "description": "Order item model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 29.99
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "example": 59.98
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ShippingAddress": {
                "title": "Shipping Address",
                "description": "Shipping address model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "company": {
                        "type": "string",
                        "example": "Acme Corp",
                        "nullable": true
                    },
                    "address_line_1": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "address_line_2": {
                        "type": "string",
                        "example": "Apt 4B",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "example": "New York"
                    },
                    "state": {
                        "type": "string",
                        "example": "NY"
                    },
                    "postal_code": {
                        "type": "string",
                        "example": "10001"
                    },
                    "country": {
                        "type": "string",
                        "example": "US"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Payment": {
                "title": "Payment",
                "description": "Payment model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 159.98
                    },
                    "currency": {
                        "type": "string",
                        "example": "USD"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed",
                            "refunded"
                        ],
                        "example": "completed"
                    },
                    "payment_method": {
                        "type": "string",
                        "example": "stripe"
                    },
                    "transaction_id": {
                        "type": "string",
                        "example": "pi_1234567890",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "description": "Product review model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "rating": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 5
                    },
                    "comment": {
                        "type": "string",
                        "example": "Great product, excellent quality!"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ],
                        "example": "approved"
                    },
                    "is_featured": {
                        "type": "boolean",
                        "example": false
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            }
                        },
                        "type": "object"
                    },
                    "product": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Harrows Supergrip Ultra"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "title": "Pagination Meta",
                "description": "Pagination metadata",
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 5
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 73
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Validation failed"
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "email": [
                                "The email field is required."
                            ],
                            "password": [
                                "The password field is required."
                            ]
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "title": "Success Response",
                "description": "Standard success response",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Promotion": {
                "title": "Promotion",
                "description": "Promotion model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Summer Sale"
                    },
                    "description": {
                        "type": "string",
                        "example": "Get 20% off all dart products"
                    },
                    "discount_type": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "fixed"
                        ],
                        "example": "percentage"
                    },
                    "discount_value": {
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "badge_text": {
                        "type": "string",
                        "example": "20% OFF"
                    },
                    "badge_color": {
                        "type": "string",
                        "example": "red"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_featured": {
                        "type": "boolean",
                        "example": false
                    },
                    "starts_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ends_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Tutorial": {
                "title": "Tutorial",
                "description": "Tutorial model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Dart Basics for Beginners"
                    },
                    "slug": {
                        "type": "string",
                        "example": "dart-basics-beginners"
                    },
                    "excerpt": {
                        "type": "string",
                        "example": "Learn the fundamental techniques of dart throwing"
                    },
                    "content": {
                        "type": "string",
                        "example": "Full tutorial content here..."
                    },
                    "featured_image_url": {
                        "type": "string",
                        "example": "https://example.com/tutorial.jpg",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "example": "Basics"
                    },
                    "difficulty": {
                        "type": "string",
                        "enum": [
                            "beginner",
                            "intermediate",
                            "advanced"
                        ],
                        "example": "beginner"
                    },
                    "is_published": {
                        "type": "boolean",
                        "example": true
                    },
                    "views": {
                        "type": "integer",
                        "example": 1250
                    },
                    "order": {
                        "type": "integer",
                        "example": 1
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Laravel Sanctum Bearer Token Authentication. Include the token in the Authorization header as 'Bearer {token}'",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and authorization endpoints including login, registration, password reset, and social authentication"
        },
        {
            "name": "Products",
            "description": "Product catalog management endpoints for browsing, searching, and retrieving product information"
        },
        {
            "name": "Categories",
            "description": "Product category management endpoints for organizing and filtering products"
        },
        {
            "name": "Cart",
            "description": "Shopping cart management endpoints for adding, updating, and removing items from user's cart"
        },
        {
            "name": "Orders",
            "description": "Order processing and management endpoints including checkout, order history, and order tracking"
        },
        {
            "name": "Payment",
            "description": "Payment processing endpoints using Stripe integration for secure transactions"
        },
        {
            "name": "Admin",
            "description": "Administrative endpoints for managing products, users, orders, and system settings (requires admin privileges)"
        }
    ],
    "externalDocs": {
        "description": "DartShop API Guide",
        "url": "https://docs.dartshop.com/api"
    }
}