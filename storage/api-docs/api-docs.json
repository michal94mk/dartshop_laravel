{
    "openapi": "3.0.0",
    "info": {
        "title": "DartShop API Documentation",
        "description": "API documentation for DartShop Laravel application",
        "contact": {
            "name": "DartShop Support",
            "email": "admin@dartshop.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/about": {
            "get": {
                "tags": [
                    "About"
                ],
                "summary": "Get about us information",
                "description": "Retrieve information about the company",
                "operationId": "6b598a2b15bb09c73f2aabde9f677b3c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AboutUs"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/about-page": {
            "get": {
                "tags": [
                    "Admin/About Page"
                ],
                "summary": "Get about page data (admin)",
                "description": "Get the first about page record or create default if none exists",
                "operationId": "5a22c712ecfdcc0afc5c61af559d437e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AboutUs"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/brands": {
            "get": {
                "tags": [
                    "Admin/Brands"
                ],
                "summary": "Get brands list (admin)",
                "description": "Retrieve all brands with admin filters and pagination",
                "operationId": "75605c4db2e3dc0225481241d0d7921a",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in brand name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (id, name, products_count, created_at, updated_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Brand"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/categories": {
            "get": {
                "tags": [
                    "Admin/Categories"
                ],
                "summary": "Get categories list (admin)",
                "description": "Retrieve all categories with admin filters and pagination",
                "operationId": "71fce704423c89eab31adce4a23df70b",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in category name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (id, name, products_count, created_at, updated_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/contact-messages": {
            "get": {
                "tags": [
                    "Admin/Contact Messages"
                ],
                "summary": "Get contact messages list (admin)",
                "description": "Retrieve all contact messages with admin filters and pagination",
                "operationId": "44450ce2fd4cf47758fe0cd732bf8313",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name, email, subject, message",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (unread, read, replied)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "unread",
                                "read",
                                "replied"
                            ]
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (created_at, name, email, subject, status)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactMessage"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/dashboard": {
            "get": {
                "tags": [
                    "Admin/Dashboard"
                ],
                "summary": "Get dashboard statistics",
                "description": "Retrieve admin dashboard statistics and data",
                "operationId": "f6e3ffeb3c9fb988ca2a77ad48e2c04c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "counts": {
                                            "properties": {
                                                "products": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "users": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "orders": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "reviews": {
                                                    "type": "integer",
                                                    "example": 200
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "recent_orders": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RecentOrder"
                                            }
                                        },
                                        "sales_data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SalesData"
                                            }
                                        },
                                        "top_products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TopProduct"
                                            }
                                        },
                                        "categories_data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryData"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/upload/tutorial-image": {
            "post": {
                "tags": [
                    "Admin/Image Upload"
                ],
                "summary": "Upload tutorial image",
                "description": "Upload an image for tutorials with validation",
                "operationId": "2e0b860a1fa7e05b456e86376ef9955b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file (jpeg, png, jpg, gif, webp, max 5MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "images/tutorials/tutorial_1234567890_abc123.jpg"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "http://example.com/storage/images/tutorials/tutorial_1234567890_abc123.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error uploading image"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/newsletter": {
            "get": {
                "tags": [
                    "Admin/Newsletter"
                ],
                "summary": "Get newsletter subscriptions list (admin)",
                "description": "Retrieve all newsletter subscriptions with admin filters and pagination",
                "operationId": "f24c2f32b4cf56aec8b12f4c1be861e4",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active, pending, unsubscribed)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "pending",
                                "unsubscribed"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (created_at, email, status, verified_at, unsubscribed_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NewsletterSubscription"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "stats": {
                                            "properties": {
                                                "active": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "pending": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "unsubscribed": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/orders": {
            "get": {
                "tags": [
                    "Admin/Orders"
                ],
                "summary": "Get orders list (admin)",
                "description": "Retrieve all orders with admin filters and pagination",
                "operationId": "d75d385d3719d4db92df549d42f08cff",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in order number, customer name, email, phone, city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by order status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter orders from date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter orders to date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (id, created_at, total, status)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/products": {
            "get": {
                "tags": [
                    "Admin/Products"
                ],
                "summary": "Get products list (admin)",
                "description": "Retrieve all products with admin filters and pagination",
                "operationId": "9058305dfe0377e6cf7c5253ed664401",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name and description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Filter by brand ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (name, price, created_at, updated_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotions": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get promotions list (public)",
                "description": "Get active promotions with products",
                "operationId": "dd99ea480aad0b3d8b59c078d2d2fbb4",
                "parameters": [
                    {
                        "name": "featured",
                        "in": "query",
                        "description": "Filter featured promotions only",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Promotion"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/promotions/featured": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get featured promotions",
                "description": "Get featured active promotions",
                "operationId": "78953e1cbbd5b9e008c87659c9193575",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of promotions to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Promotion"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/promotions/{promotion}": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get promotion details",
                "description": "Get promotion details with products",
                "operationId": "eb867010d8ef0ae70bf94f2e53a3d3c5",
                "parameters": [
                    {
                        "name": "promotion",
                        "in": "path",
                        "description": "Promotion ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promotion"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Promotion not found or not active",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reviews": {
            "get": {
                "tags": [
                    "Admin/Reviews"
                ],
                "summary": "Get reviews list (admin)",
                "description": "Retrieve all reviews with admin filters and pagination",
                "operationId": "9a0aa27eebbefe2594729b4f6e750965",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in title, content, user name, product name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Filter by rating (1-5)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "approved",
                        "in": "query",
                        "description": "Filter by approval status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ]
                        }
                    },
                    {
                        "name": "featured",
                        "in": "query",
                        "description": "Filter by featured status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ]
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (id, rating, created_at, product)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/tutorials": {
            "get": {
                "tags": [
                    "Admin/Tutorials"
                ],
                "summary": "Get tutorials list (admin)",
                "description": "Retrieve all tutorials with admin filters and pagination",
                "operationId": "79655eac29523e57cc601e829a357101",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in title, content",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (published, draft)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "published",
                                "draft"
                            ]
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (created_at, title)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tutorial"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin/Users"
                ],
                "summary": "Get users list (admin)",
                "description": "Retrieve all users with admin filters and pagination",
                "operationId": "9ded17315e13756cd593b5840cd39a26",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name, first_name, last_name, email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role (admin, user)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "user"
                            ]
                        }
                    },
                    {
                        "name": "verified",
                        "in": "query",
                        "description": "Filter by verification status (0, 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "account_type",
                        "in": "query",
                        "description": "Filter by account type (google, local)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "local"
                            ]
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field (name, email, created_at, updated_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return access token",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Register a new user account",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "privacy_policy_accepted"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "privacy_policy_accepted": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "newsletter_consent": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get cart contents",
                "description": "Retrieve all items in the user's shopping cart",
                "operationId": "7fdb9b40bd4ad2baf12aa15164eab788",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CartItem"
                                            }
                                        },
                                        "subtotal": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 299.99
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add item to cart",
                "description": "Add a product to the shopping cart",
                "operationId": "cf9633893102fd28e9f7fa0e8bff7f36",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart successfully"
                                        },
                                        "cart_item": {
                                            "$ref": "#/components/schemas/CartItem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "description": "Retrieve all categories with optional filtering",
                "operationId": "ac9c4d978ea4e5b72915ca9728e5b8b1",
                "parameters": [
                    {
                        "name": "with_products_only",
                        "in": "query",
                        "description": "Show only categories that have products",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryWithProducts"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "cache_used": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category details",
                "description": "Retrieve detailed information about a specific category",
                "operationId": "09767bb2e47dde77dd1e2591428b0ae1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}/products": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get products in category",
                "description": "Retrieve all products belonging to a specific category",
                "operationId": "f5471cad040b47602127693aa34ba309",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search products by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price_min",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price_max",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field (name, price, created_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of products per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/statistics": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category statistics",
                "description": "Retrieve statistics about categories for dashboard/admin",
                "operationId": "12fd056ed3ac9a1b3d7d5efd147e665b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_categories": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "categories_with_products": {
                                            "type": "integer",
                                            "example": 8
                                        },
                                        "top_categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Dart Flights"
                                                    },
                                                    "products_count": {
                                                        "type": "integer",
                                                        "example": 25
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/checkout": {
            "post": {
                "tags": [
                    "Checkout"
                ],
                "summary": "Create order",
                "description": "Create a new order from cart items",
                "operationId": "f8cccfe98fe2dc04079abe0b3479afb2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shipping_address",
                                    "shipping_method",
                                    "payment_method"
                                ],
                                "properties": {
                                    "shipping_address": {
                                        "properties": {
                                            "first_name": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+48123456789"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "ul. Przykładowa 1"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Warszawa"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "00-001"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "Polska"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "enum": [
                                            "standard",
                                            "express"
                                        ],
                                        "example": "standard"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "enum": [
                                            "stripe",
                                            "bank_transfer"
                                        ],
                                        "example": "stripe"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Dostawa do biura",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/Order"
                                        },
                                        "payment_url": {
                                            "type": "string",
                                            "example": "https://checkout.stripe.com/...",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Empty cart or product unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contact": {
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Send contact message",
                "description": "Send a contact message to the admin",
                "operationId": "091364660aac946c17e7253400cb3f89",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "Question about products"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "I have a question about..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Wiadomość została wysłana. Skontaktujemy się z Tobą jak najszybciej."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ContactMessage"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify email address",
                "description": "Verify user's email address using verification link",
                "operationId": "9ec4890bbcd525f4c38b46a189363b92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Email verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to profile page with verification status",
                        "headers": {
                            "Location": {
                                "description": "Redirect URL",
                                "schema": {
                                    "type": "string",
                                    "example": "/profile?verified=success"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/email/verification-notification": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Send verification email",
                "description": "Send email verification notification to user",
                "operationId": "4ef300955cf1400566064c1b667f459a",
                "responses": {
                    "200": {
                        "description": "Verification email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification link sent!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Google OAuth user or already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/{product}": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Toggle favorite product",
                "description": "Add or remove a product from user's favorites",
                "operationId": "3b1118a0138e6fe013ab81e6768a4217",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to favorites."
                                        },
                                        "is_favorite": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Get favorite products",
                "description": "Retrieve all favorite products for the authenticated user",
                "operationId": "bf6d3f7e4e867f73f954f19a685cd0e9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "favorite_products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/check/{product}": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Check if product is favorite",
                "description": "Check if a product is in the user's favorites",
                "operationId": "d8277647baf50fdddd99fbfde1d61311",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_favorite": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/guest-checkout": {
            "post": {
                "tags": [
                    "Guest Checkout"
                ],
                "summary": "Process guest checkout",
                "description": "Process checkout for non-authenticated users",
                "operationId": "30edf210585f8f9df9fdac58deb3536e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shipping_address",
                                    "shipping_method",
                                    "payment_method"
                                ],
                                "properties": {
                                    "shipping_address": {
                                        "properties": {
                                            "first_name": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+48123456789"
                                            },
                                            "street": {
                                                "type": "string",
                                                "example": "ul. Przykładowa 1"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Warszawa"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "00-001"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "Polska"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "enum": [
                                            "standard",
                                            "express"
                                        ],
                                        "example": "standard"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "enum": [
                                            "stripe",
                                            "bank_transfer"
                                        ],
                                        "example": "stripe"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Dostawa do biura",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/Order"
                                        },
                                        "payment_url": {
                                            "type": "string",
                                            "example": "https://checkout.stripe.com/...",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Empty cart or product unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/newsletter/subscribe": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Subscribe to newsletter",
                "description": "Subscribe an email address to the newsletter",
                "operationId": "61bc0f8f4d2fe934cbfc1418b9e4b6c5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sprawdź swoją skrzynkę email i kliknij link weryfikacyjny"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already subscribed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ten adres email jest już zapisany do newslettera"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Send password reset link",
                "description": "Send password reset link to user's email",
                "operationId": "1929663efe5a75fe5d93a59992d107c2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "We have emailed your password reset link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/validate-reset-token": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Validate reset token",
                "description": "Validate password reset token",
                "operationId": "124e3a916d9b529926bccbd39d35aeb1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-123"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token jest prawidłowy."
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "user@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Reset password",
                "description": "Reset user password using token",
                "operationId": "b306611caa91e31ccf03645d868691be",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-123"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your password has been reset."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/privacy-policy": {
            "get": {
                "tags": [
                    "Privacy Policy"
                ],
                "summary": "Get privacy policy",
                "description": "Get current active privacy policy",
                "operationId": "5e1d89bb94e0fb7ba6c10a1ad89c315b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "privacy_policy": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Polityka Prywatności DartShop"
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "example": "1.0"
                                                },
                                                "effective_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "<h2>1. Informacje ogólne</h2>..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/privacy-policy/accept": {
            "post": {
                "tags": [
                    "Privacy Policy"
                ],
                "summary": "Accept privacy policy",
                "description": "Accept privacy policy for authenticated user",
                "operationId": "548f8dff44be57bbd98638ef4cc72451",
                "responses": {
                    "200": {
                        "description": "Privacy policy accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Polityka prywatności została zaakceptowana"
                                        },
                                        "privacy_policy_accepted": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "privacy_policy_accepted_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Retrieve a paginated list of products with optional filtering and sorting",
                "operationId": "d97d1c3727cbac49708b85f7d11f7d58",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Filter by brand ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search products by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price_min",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price_max",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "featured_only",
                        "in": "query",
                        "description": "Show only featured products",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "in_stock_only",
                        "in": "query",
                        "description": "Show only products in stock",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "on_promotion_only",
                        "in": "query",
                        "description": "Show only products on promotion",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field (created_at, name, price, updated_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of products per page (1-50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details",
                "description": "Retrieve detailed information about a specific product",
                "operationId": "c87fb2e4d617e7b36c712cad358acdb8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/products/latest": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get latest products",
                "description": "Retrieve the most recently added products",
                "operationId": "7ffdacbdbf0e7d7f668510c8ce20622a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/profile": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update user profile",
                "description": "Update user profile information",
                "operationId": "63009d68ac46d70e0d65b72821325471",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profil został pomyślnie zaktualizowany."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/password": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update user password",
                "description": "Update user password (not available for Google OAuth users)",
                "operationId": "666c73b1469a36b62bf2eb3f7bd378f6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "oldpassword123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hasło zostało pomyślnie zmienione."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error or Google OAuth user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shipping-methods": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Get shipping methods",
                "description": "Get available shipping methods with costs",
                "operationId": "8e626dadaab2e07d1e45b3d95ffc5ae7",
                "parameters": [
                    {
                        "name": "cart_total",
                        "in": "query",
                        "description": "Cart total amount",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 299.99
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "methods": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "standard"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Standard Delivery"
                                                    },
                                                    "cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 15
                                                    },
                                                    "estimated_days": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "free_shipping_threshold": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/shipping-methods": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Get user shipping methods",
                "description": "Get shipping methods for authenticated users with additional benefits",
                "operationId": "894dac80c421c54ca02d7512fefcbd7e",
                "parameters": [
                    {
                        "name": "cart_total",
                        "in": "query",
                        "description": "Cart total amount",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 299.99
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "methods": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "standard"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Standard Delivery"
                                                    },
                                                    "cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 15
                                                    },
                                                    "estimated_days": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "free_shipping_threshold": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 500
                                        },
                                        "cart_qualifies_for_free_shipping": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stripe/create-checkout-session": {
            "post": {
                "tags": [
                    "Stripe Payments"
                ],
                "summary": "Create Stripe checkout session",
                "description": "Create Stripe checkout session for authenticated users",
                "operationId": "03ebd055a1c7649bb33f64289119b81a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shipping",
                                    "shipping_method"
                                ],
                                "properties": {
                                    "shipping": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "ul. Przykładowa 1"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Warszawa"
                                            },
                                            "postalCode": {
                                                "type": "string",
                                                "example": "00-001"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "example": "standard"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout session created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "session_id": {
                                            "type": "string",
                                            "example": "cs_test_..."
                                        },
                                        "session_url": {
                                            "type": "string",
                                            "example": "https://checkout.stripe.com/..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Empty cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/guest-stripe/create-checkout-session": {
            "post": {
                "tags": [
                    "Stripe Payments"
                ],
                "summary": "Create guest Stripe checkout session",
                "description": "Create Stripe checkout session for guest users",
                "operationId": "74d27e48aac76e0affe52970d3aefa3b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "items",
                                    "shipping",
                                    "shipping_method"
                                ],
                                "properties": {
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "shipping": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "ul. Przykładowa 1"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Warszawa"
                                            },
                                            "postalCode": {
                                                "type": "string",
                                                "example": "00-001"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "shipping_method": {
                                        "type": "string",
                                        "example": "standard"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout session created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "session_id": {
                                            "type": "string",
                                            "example": "cs_test_..."
                                        },
                                        "session_url": {
                                            "type": "string",
                                            "example": "https://checkout.stripe.com/..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stripe/create-payment-intent": {
            "post": {
                "tags": [
                    "Stripe Payments"
                ],
                "summary": "Create payment intent",
                "description": "Create Stripe payment intent for authenticated users",
                "operationId": "3ea128c380b93c32fe4d13761140400c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "currency"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "integer",
                                        "example": 2999
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "pln"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment intent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "client_secret": {
                                            "type": "string",
                                            "example": "pi_..._secret_..."
                                        },
                                        "payment_intent_id": {
                                            "type": "string",
                                            "example": "pi_..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/guest-stripe/create-payment-intent": {
            "post": {
                "tags": [
                    "Stripe Payments"
                ],
                "summary": "Create guest payment intent",
                "description": "Create Stripe payment intent for guest users",
                "operationId": "acff40e92180513d56213221fe43c4b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "currency"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "integer",
                                        "example": 2999
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "pln"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment intent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "client_secret": {
                                            "type": "string",
                                            "example": "pi_..._secret_..."
                                        },
                                        "payment_intent_id": {
                                            "type": "string",
                                            "example": "pi_..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stripe/confirm-payment": {
            "post": {
                "tags": [
                    "Stripe Payments"
                ],
                "summary": "Confirm payment",
                "description": "Confirm Stripe payment for authenticated users",
                "operationId": "52ca99c52cab1066c77cca6ec37327ea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_intent_id",
                                    "order_id"
                                ],
                                "properties": {
                                    "payment_intent_id": {
                                        "type": "string",
                                        "example": "pi_..."
                                    },
                                    "order_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment confirmed successfully"
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Payment failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stripe/webhook": {
            "post": {
                "tags": [
                    "Stripe Webhook"
                ],
                "summary": "Handle Stripe webhook",
                "description": "Handle Stripe webhook events (payment_intent.succeeded, payment_intent.payment_failed, checkout.session.completed)",
                "operationId": "c0cc4d5680d38adbed8c3b903513f1ff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "payment_intent.succeeded"
                                    },
                                    "data": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid signature or webhook error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid signature"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Health check endpoint",
                "operationId": "1cdb246a0cc7a61b4444b09dfd4954bb",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API is running"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "example": "2024-01-01T00:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/terms-of-service": {
            "get": {
                "tags": [
                    "Terms of Service"
                ],
                "summary": "Get terms of service",
                "description": "Get current active terms of service",
                "operationId": "d3932ae0c526450b9ec4e3d65f03ae95",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "terms_of_service": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Regulamin DartShop"
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "example": "1.0"
                                                },
                                                "effective_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "<h2>1. Postanowienia ogólne</h2>..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/terms-of-service/accept": {
            "post": {
                "tags": [
                    "Terms of Service"
                ],
                "summary": "Accept terms of service",
                "description": "Accept terms of service for authenticated user",
                "operationId": "e3e9537545cdae9820beb2bb3fe74a7e",
                "responses": {
                    "200": {
                        "description": "Terms of service accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Regulamin został zaakceptowany"
                                        },
                                        "terms_of_service_accepted": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "terms_of_service_accepted_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tutorials": {
            "get": {
                "tags": [
                    "Tutorials"
                ],
                "summary": "Get tutorials list",
                "description": "Retrieve all published tutorials",
                "operationId": "786b368f63d6a9b4773dd94d29650eca",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tutorial"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tutorials/{slug}": {
            "get": {
                "tags": [
                    "Tutorials"
                ],
                "summary": "Get tutorial details",
                "description": "Retrieve detailed information about a specific tutorial",
                "operationId": "d361a4e5cd81182219e96d2dd37383e6",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Tutorial slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TutorialDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tutorial not found"
                    }
                }
            }
        },
        "/api/orders/my-orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get user orders",
                "description": "Retrieve all orders for the authenticated user",
                "operationId": "f055a01e868d08108335679e53d83cae",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/my-orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get specific order",
                "description": "Retrieve a specific order for the authenticated user",
                "operationId": "a544fc983181610c68b5217fde28f707",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/my-reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get user reviews",
                "description": "Retrieve all reviews for the authenticated user",
                "operationId": "d809cf3696c5f632179301ccc04e630d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/my-reviews/{id}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get specific review",
                "description": "Retrieve a specific review for the authenticated user",
                "operationId": "dbefd032d5054d4f3c453c3db896926c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Review not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response",
                "properties": {
                    "error": {
                        "type": "string",
                        "example": "Error message"
                    },
                    "message": {
                        "type": "string",
                        "example": "Detailed error description"
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "title": "Success Response",
                "description": "Standard success response",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "ok"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "title": "Pagination Meta",
                "description": "Pagination metadata",
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 5
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 12
                    },
                    "to": {
                        "type": "integer",
                        "example": 12
                    },
                    "total": {
                        "type": "integer",
                        "example": 60
                    },
                    "cache_hit": {
                        "type": "boolean",
                        "example": false
                    },
                    "cache_key": {
                        "type": "string",
                        "example": "products_list_abc123..."
                    },
                    "filters_available": {
                        "properties": {
                            "categories": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            },
                            "brands": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            },
                            "price_range": {
                                "properties": {
                                    "min": {
                                        "type": "number",
                                        "example": 10
                                    },
                                    "max": {
                                        "type": "number",
                                        "example": 500
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PaginationLinks": {
                "title": "Pagination Links",
                "description": "Pagination links",
                "properties": {
                    "first": {
                        "type": "string",
                        "example": "http://example.com/api/products?page=1"
                    },
                    "last": {
                        "type": "string",
                        "example": "http://example.com/api/products?page=5"
                    },
                    "prev": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "next": {
                        "type": "string",
                        "example": "http://example.com/api/products?page=2"
                    }
                },
                "type": "object"
            },
            "CategoryWithProducts": {
                "title": "Category With Products",
                "description": "Category with preview products",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Dart Flights"
                    },
                    "products_count": {
                        "type": "integer",
                        "example": 25
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "preview_products": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Harrows Supergrip Ultra"
                                },
                                "price": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 29.99
                                },
                                "image_url": {
                                    "type": "string",
                                    "example": "https://example.com/image.jpg",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CategoryDetail": {
                "title": "Category Detail",
                "description": "Detailed category information",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Dart Flights"
                    },
                    "products_count": {
                        "type": "integer",
                        "example": 25
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CartItem": {
                "title": "Cart Item",
                "description": "Shopping cart item",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_number": {
                        "type": "string",
                        "example": "ORD-2024-001"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 299.99
                    },
                    "shipping_address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "Order Item",
                "description": "Order item model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 29.99
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "description": "Product review model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Great product!"
                    },
                    "content": {
                        "type": "string",
                        "example": "This is an excellent product..."
                    },
                    "rating": {
                        "type": "integer",
                        "example": 5
                    },
                    "is_approved": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_featured": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "ContactMessage": {
                "title": "Contact Message",
                "description": "Contact form message",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "subject": {
                        "type": "string",
                        "example": "Question about products"
                    },
                    "message": {
                        "type": "string",
                        "example": "I have a question about..."
                    },
                    "status": {
                        "type": "string",
                        "example": "unread"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Tutorial": {
                "title": "Tutorial",
                "description": "Tutorial model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "How to choose darts"
                    },
                    "slug": {
                        "type": "string",
                        "example": "how-to-choose-darts"
                    },
                    "excerpt": {
                        "type": "string",
                        "example": "Learn how to choose the right darts..."
                    },
                    "featured_image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "nullable": true
                    },
                    "thumbnail_image_url": {
                        "type": "string",
                        "example": "https://example.com/thumb.jpg",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "example": "Beginner"
                    },
                    "difficulty": {
                        "type": "string",
                        "example": "Easy"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "type": "string",
                        "example": "DartShop Admin"
                    },
                    "views": {
                        "type": "integer",
                        "example": 150
                    },
                    "order": {
                        "type": "integer",
                        "example": 1
                    },
                    "is_published": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TutorialDetail": {
                "title": "Tutorial Detail",
                "description": "Detailed tutorial information",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "How to choose darts"
                    },
                    "slug": {
                        "type": "string",
                        "example": "how-to-choose-darts"
                    },
                    "content": {
                        "type": "string",
                        "example": "Full tutorial content..."
                    },
                    "excerpt": {
                        "type": "string",
                        "example": "Learn how to choose the right darts..."
                    },
                    "featured_image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "nullable": true
                    },
                    "thumbnail_image_url": {
                        "type": "string",
                        "example": "https://example.com/thumb.jpg",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "example": "Beginner"
                    },
                    "difficulty": {
                        "type": "string",
                        "example": "Easy"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "type": "string",
                        "example": "DartShop Admin"
                    },
                    "views": {
                        "type": "integer",
                        "example": 150
                    },
                    "meta_title": {
                        "type": "string",
                        "example": "How to Choose Darts - Complete Guide"
                    },
                    "meta_description": {
                        "type": "string",
                        "example": "Learn how to choose the perfect darts..."
                    },
                    "order": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "AboutUs": {
                "title": "About Us",
                "description": "About us page information",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "O naszym sklepie"
                    },
                    "content": {
                        "type": "string",
                        "example": "Jesteśmy specjalistycznym sklepem..."
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://example.com/about.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "RecentOrder": {
                "title": "Recent Order",
                "description": "Recent order for dashboard",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "example": 299.99
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-01-15 10:30:00"
                    }
                },
                "type": "object"
            },
            "SalesData": {
                "title": "Sales Data",
                "description": "Sales data for charts",
                "properties": {
                    "date": {
                        "type": "string",
                        "example": "2024-01-15"
                    },
                    "total_sales": {
                        "type": "number",
                        "format": "float",
                        "example": 1500
                    },
                    "order_count": {
                        "type": "integer",
                        "example": 5
                    }
                },
                "type": "object"
            },
            "TopProduct": {
                "title": "Top Product",
                "description": "Top selling product",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Harrows Supergrip Ultra"
                    },
                    "total_sold": {
                        "type": "integer",
                        "example": 25
                    },
                    "total_revenue": {
                        "type": "number",
                        "format": "float",
                        "example": 749.75
                    }
                },
                "type": "object"
            },
            "CategoryData": {
                "title": "Category Data",
                "description": "Category statistics for dashboard",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Dart Flights"
                    },
                    "products_count": {
                        "type": "integer",
                        "example": 15
                    },
                    "total_sales": {
                        "type": "number",
                        "format": "float",
                        "example": 2500
                    }
                },
                "type": "object"
            },
            "NewsletterSubscription": {
                "title": "Newsletter Subscription",
                "description": "Newsletter subscription model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "pending",
                            "unsubscribed"
                        ],
                        "example": "active"
                    },
                    "verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "unsubscribed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "title": "Validation Error",
                "description": "Validation error response",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "field_name": [
                                "The field name field is required."
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "Brand": {
                "title": "Brand",
                "description": "Product brand model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Harrows"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Product category model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Dart Flights"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Harrows Supergrip Ultra"
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional dart flights"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 29.99
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "nullable": true
                    },
                    "is_featured": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "brand": {
                        "$ref": "#/components/schemas/Brand"
                    },
                    "average_rating": {
                        "type": "number",
                        "format": "float",
                        "example": 4.5
                    },
                    "reviews_count": {
                        "type": "integer",
                        "example": 10
                    },
                    "promotion_price": {
                        "type": "number",
                        "format": "float",
                        "example": 24.99,
                        "nullable": true
                    },
                    "savings": {
                        "type": "number",
                        "format": "float",
                        "example": 5
                    },
                    "promotion": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Promotion"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Promotion": {
                "title": "Promotion",
                "description": "Product promotion model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Summer Sale"
                    },
                    "description": {
                        "type": "string",
                        "example": "Get 20% off on selected items"
                    },
                    "discount_type": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "fixed"
                        ],
                        "example": "percentage"
                    },
                    "discount_value": {
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "badge_text": {
                        "type": "string",
                        "example": "20% OFF"
                    },
                    "badge_color": {
                        "type": "string",
                        "example": "#ff0000"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": false
                    },
                    "google_id": {
                        "type": "string",
                        "example": "123456789",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "example": "https://example.com/avatar.jpg",
                        "nullable": true
                    },
                    "privacy_policy_accepted": {
                        "type": "boolean",
                        "example": true
                    },
                    "privacy_policy_accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "terms_of_service_accepted": {
                        "type": "boolean",
                        "example": true
                    },
                    "terms_of_service_accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string",
                        "example": "user"
                    },
                    "full_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "display_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "is_google_user": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "About",
            "description": "API Endpoints for about us page"
        },
        {
            "name": "Admin/About Page",
            "description": "API Endpoints for admin about page management"
        },
        {
            "name": "Admin/Brands",
            "description": "API Endpoints for admin brand management"
        },
        {
            "name": "Admin/Categories",
            "description": "API Endpoints for admin category management"
        },
        {
            "name": "Admin/Contact Messages",
            "description": "API Endpoints for admin contact message management"
        },
        {
            "name": "Admin/Dashboard",
            "description": "API Endpoints for admin dashboard"
        },
        {
            "name": "Admin/Image Upload",
            "description": "API Endpoints for admin image upload management"
        },
        {
            "name": "Admin/Newsletter",
            "description": "API Endpoints for admin newsletter management"
        },
        {
            "name": "Admin/Orders",
            "description": "API Endpoints for admin order management"
        },
        {
            "name": "Admin/Products",
            "description": "API Endpoints for admin product management"
        },
        {
            "name": "Admin/Reviews",
            "description": "API Endpoints for admin review management"
        },
        {
            "name": "Admin/Tutorials",
            "description": "API Endpoints for admin tutorial management"
        },
        {
            "name": "Admin/Users",
            "description": "API Endpoints for admin user management"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Cart",
            "description": "API Endpoints for shopping cart"
        },
        {
            "name": "Categories",
            "description": "API Endpoints for category management"
        },
        {
            "name": "Checkout",
            "description": "API Endpoints for checkout process"
        },
        {
            "name": "Contact",
            "description": "API Endpoints for contact form"
        },
        {
            "name": "Email Verification",
            "description": "API Endpoints for email verification"
        },
        {
            "name": "Favorites",
            "description": "API Endpoints for favorite products management"
        },
        {
            "name": "Guest Checkout",
            "description": "API Endpoints for guest checkout process"
        },
        {
            "name": "Newsletter",
            "description": "API Endpoints for newsletter management"
        },
        {
            "name": "Password Reset",
            "description": "API Endpoints for password reset functionality"
        },
        {
            "name": "Privacy Policy",
            "description": "API Endpoints for privacy policy management"
        },
        {
            "name": "Products",
            "description": "API Endpoints for product management"
        },
        {
            "name": "Profile",
            "description": "API Endpoints for user profile management"
        },
        {
            "name": "Promotions",
            "description": "API Endpoints for promotion management"
        },
        {
            "name": "Shipping",
            "description": "API Endpoints for shipping methods"
        },
        {
            "name": "Stripe Payments",
            "description": "API Endpoints for Stripe payment processing"
        },
        {
            "name": "Stripe Webhook",
            "description": "API Endpoints for Stripe webhook handling"
        },
        {
            "name": "Orders",
            "description": "API Endpoints for order management"
        },
        {
            "name": "Terms of Service",
            "description": "API Endpoints for terms of service management"
        },
        {
            "name": "Tutorials",
            "description": "API Endpoints for tutorial management"
        },
        {
            "name": "Reviews",
            "description": "API Endpoints for review management"
        },
        {
            "name": "System",
            "description": "System"
        }
    ]
}